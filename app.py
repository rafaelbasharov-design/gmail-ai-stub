from flask import Flask, request, jsonify
import os
import threading
import time
import requests
from openai import OpenAI

app = Flask(__name__)
client = OpenAI(api_key=os.getenv("OPENAI_API_KEY"))

# ü©µ Keep-alive –ø–∏–Ω–≥ (—á—Ç–æ–±—ã Render –Ω–µ –∑–∞—Å—ã–ø–∞–ª)
def keep_alive():
    while True:
        try:
            url = "https://gmail-ai-stub.onrender.com/"
            requests.get(url, timeout=5)
            print("‚úÖ Keep-alive ping sent")
        except Exception as e:
            print("‚ö†Ô∏è Keep-alive error:", e)
        time.sleep(540)  # –∫–∞–∂–¥—ã–µ 9 –º–∏–Ω—É—Ç

threading.Thread(target=keep_alive, daemon=True).start()

@app.route("/")
def home():
    return jsonify({"status": "Gmail AI Stub is running"})

@app.route("/generate", methods=["POST"])
def generate_reply():
    try:
        data = request.get_json()
        email_text = data.get("text", "").strip()

        if not email_text:
            return jsonify({"error": "No email text provided"}), 400

        # üîç AI –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Ç–µ–∫—Å—Ç –ø–∏—Å—å–º–∞, –∞ –Ω–µ –ø—Ä–æ—Å—Ç–æ –ø–æ–ª–µ –≤–≤–æ–¥–∞
        prompt = f"""
        –¢—ã ‚Äî –≤–µ–∂–ª–∏–≤—ã–π –∏ –ª–∞–∫–æ–Ω–∏—á–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ –¥–ª—è Gmail. 
        –ù–∞ –æ—Å–Ω–æ–≤–µ —Å–ª–µ–¥—É—é—â–µ–≥–æ –ø–∏—Å—å–º–∞ —Å–æ–∑–¥–∞–π –∫–æ—Ä–æ—Ç–∫–∏–π –æ—Ç–≤–µ—Ç –æ—Ç –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. 
        –ò—Å–ø–æ–ª—å–∑—É–π —Å—Ç–∏–ª—å –¥–µ–ª–æ–≤–æ–≥–æ –æ–±—â–µ–Ω–∏—è. –í–æ—Ç —Ç–µ–∫—Å—Ç –ø–∏—Å—å–º–∞:
        ---
        {email_text}
        ---
        """

        completion = client.chat.completions.create(
            model="gpt-3.5-turbo",
            messages=[
                {"role": "system", "content": "–¢—ã –ø–æ–º–æ—â–Ω–∏–∫ –ø–æ –Ω–∞–ø–∏—Å–∞–Ω–∏—é –ø–∏—Å–µ–º Gmail."},
                {"role": "user", "content": prompt}
            ],
            temperature=0.7,
            max_tokens=250
        )

        reply = completion.choices[0].message.content.strip()
        return jsonify({"reply": reply})

    except Exception as e:
        print("–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞:", e)
        return jsonify({"error": str(e)}), 500

if __name__ == "__main__":
    app.run(host="0.0.0.0", port=10000)
